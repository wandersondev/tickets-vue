{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAppBar/VAppBar.tsx", "../../vuetify/src/components/VToolbar/VToolbar.tsx", "../../vuetify/src/components/VToolbar/VToolbarTitle.tsx", "../../vuetify/src/composables/scroll.ts", "../../vuetify/src/components/VAppBar/VAppBarNavIcon.tsx", "../../vuetify/src/components/VAppBar/VAppBarTitle.tsx"],
  "sourcesContent": ["// Styles\nimport './VAppBar.sass'\n\n// Components\nimport { makeVToolbarProps, VToolbar } from '@/components/VToolbar/VToolbar'\n\n// Composables\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeScrollProps, useScroll } from '@/composables/scroll'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, ref, shallowRef, toRef, watchEffect } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VToolbarSlots } from '@/components/VToolbar/VToolbar'\n\nexport const makeVAppBarProps = propsFactory({\n  scrollBehavior: String as PropType<'hide' | 'fully-hide' | 'inverted' | 'collapse' | 'elevate' | 'fade-image' | (string & {})>,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n  location: {\n    type: String as PropType<'top' | 'bottom'>,\n    default: 'top',\n    validator: (value: any) => ['top', 'bottom'].includes(value),\n  },\n\n  ...makeVToolbarProps(),\n  ...makeLayoutItemProps(),\n  ...makeScrollProps(),\n\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n}, 'VAppBar')\n\nexport const VAppBar = genericComponent<VToolbarSlots>()({\n  name: 'VAppBar',\n\n  props: makeVAppBarProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const vToolbarRef = ref<VToolbar>()\n    const isActive = useProxiedModel(props, 'modelValue')\n    const scrollBehavior = computed(() => {\n      const behavior = new Set(props.scrollBehavior?.split(' ') ?? [])\n      return {\n        hide: behavior.has('hide'),\n        fullyHide: behavior.has('fully-hide'),\n        inverted: behavior.has('inverted'),\n        collapse: behavior.has('collapse'),\n        elevate: behavior.has('elevate'),\n        fadeImage: behavior.has('fade-image'),\n        // shrink: behavior.has('shrink'),\n      }\n    })\n    const canScroll = computed(() => {\n      const behavior = scrollBehavior.value\n      return (\n        behavior.hide ||\n        behavior.fullyHide ||\n        behavior.inverted ||\n        behavior.collapse ||\n        behavior.elevate ||\n        behavior.fadeImage ||\n        // behavior.shrink ||\n        !isActive.value\n      )\n    })\n    const {\n      currentScroll,\n      scrollThreshold,\n      isScrollingUp,\n      scrollRatio,\n    } = useScroll(props, { canScroll })\n\n    const canHide = toRef(() => (\n      scrollBehavior.value.hide ||\n      scrollBehavior.value.fullyHide\n    ))\n    const isCollapsed = computed(() => props.collapse || (\n      scrollBehavior.value.collapse &&\n      (scrollBehavior.value.inverted ? scrollRatio.value > 0 : scrollRatio.value === 0)\n    ))\n    const isFlat = computed(() => props.flat || (\n      scrollBehavior.value.fullyHide &&\n      !isActive.value\n    ) || (\n      scrollBehavior.value.elevate &&\n      (scrollBehavior.value.inverted ? currentScroll.value > 0 : currentScroll.value === 0)\n    ))\n    const opacity = computed(() => (\n      scrollBehavior.value.fadeImage\n        ? (scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value)\n        : undefined\n    ))\n    const height = computed(() => {\n      if (scrollBehavior.value.hide && scrollBehavior.value.inverted) return 0\n\n      const height = vToolbarRef.value?.contentHeight ?? 0\n      const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0\n\n      if (!canHide.value) return (height + extensionHeight)\n\n      return currentScroll.value < scrollThreshold.value || scrollBehavior.value.fullyHide\n        ? (height + extensionHeight)\n        : height\n    })\n\n    useToggleScope(() => !!props.scrollBehavior, () => {\n      watchEffect(() => {\n        if (canHide.value) {\n          if (scrollBehavior.value.inverted) {\n            isActive.value = currentScroll.value > scrollThreshold.value\n          } else {\n            isActive.value = isScrollingUp.value || (currentScroll.value < scrollThreshold.value)\n          }\n        } else {\n          isActive.value = true\n        }\n      })\n    })\n\n    const { ssrBootStyles } = useSsrBoot()\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(() => props.location),\n      layoutSize: height,\n      elementSize: shallowRef(undefined),\n      active: isActive,\n      absolute: toRef(() => props.absolute),\n    })\n\n    useRender(() => {\n      const toolbarProps = VToolbar.filterProps(props)\n\n      return (\n        <VToolbar\n          ref={ vToolbarRef }\n          class={[\n            'v-app-bar',\n            {\n              'v-app-bar--bottom': props.location === 'bottom',\n            },\n            props.class,\n          ]}\n          style={[\n            {\n              ...layoutItemStyles.value,\n              '--v-toolbar-image-opacity': opacity.value,\n              height: undefined,\n              ...ssrBootStyles.value,\n            },\n            props.style,\n          ]}\n          { ...toolbarProps }\n          collapse={ isCollapsed.value }\n          flat={ isFlat.value }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VAppBar = InstanceType<typeof VAppBar>\n", "// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VToolbarTitle } from './VToolbarTitle'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, shallowRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport type Density = null | 'prominent' | 'default' | 'comfortable' | 'compact'\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: {\n    type: Boolean,\n    default: null,\n  },\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'VToolbar')\n\nexport type VToolbarSlots = {\n  default: never\n  image: never\n  prepend: never\n  append: never\n  title: never\n  extension: never\n}\n\nexport const VToolbar = genericComponent<VToolbarSlots>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.color)\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n\n    const isExtended = shallowRef(props.extended === null ? !!(slots.extension?.()) : props.extended)\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = props.extended === null ? !!extension : props.extended\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(contentHeight.value),\n              },\n            }}\n          >\n            <div\n              class=\"v-toolbar__content\"\n              style={{ height: convertToUnit(contentHeight.value) }}\n            >\n              { slots.prepend && (\n                <div class=\"v-toolbar__prepend\">\n                  { slots.prepend?.() }\n                </div>\n              )}\n\n              { hasTitle && (\n                <VToolbarTitle key=\"title\" text={ props.title }>\n                  {{ text: slots.title }}\n                </VToolbarTitle>\n              )}\n\n              { slots.default?.() }\n\n              { slots.append && (\n                <div class=\"v-toolbar__append\">\n                  { slots.append?.() }\n                </div>\n              )}\n            </div>\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(extensionHeight.value),\n              },\n            }}\n          >\n            <VExpandTransition>\n              { isExtended.value && (\n                <div\n                  class=\"v-toolbar__extension\"\n                  style={{ height: convertToUnit(extensionHeight.value) }}\n                >\n                  { extension }\n                </div>\n              )}\n            </VExpandTransition>\n          </VDefaultsProvider>\n        </props.tag>\n      )\n    })\n\n    return {\n      contentHeight,\n      extensionHeight,\n    }\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VToolbarTitle')\n\nexport type VToolbarTitleSlots = {\n  default: never\n  text: never\n}\n\nexport const VToolbarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VToolbarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar-title',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n", "// Utilities\nimport {\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { clamp, consoleWarn, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport interface ScrollProps {\n  scrollTarget?: string\n  scrollThreshold?: string | number\n}\n\nexport interface ThresholdMetCallbackData {\n  isScrollingUp: boolean\n  currentThreshold: number\n  savedScroll: Ref<number>\n}\n\n// Composables\nexport const makeScrollProps = propsFactory({\n  scrollTarget: {\n    type: String,\n  },\n  scrollThreshold: {\n    type: [String, Number],\n    default: 300,\n  },\n}, 'scroll')\n\nexport interface ScrollArguments {\n  canScroll?: Readonly<Ref<boolean>>\n}\n\nexport function useScroll (\n  props: ScrollProps,\n  args: ScrollArguments = {},\n) {\n  const { canScroll } = args\n  let previousScroll = 0\n  let previousScrollHeight = 0\n  const target = ref<Element | Window | null>(null)\n  const currentScroll = shallowRef(0)\n  const savedScroll = shallowRef(0)\n  const currentThreshold = shallowRef(0)\n  const isScrollActive = shallowRef(false)\n  const isScrollingUp = shallowRef(false)\n\n  const scrollThreshold = computed(() => {\n    return Number(props.scrollThreshold)\n  })\n\n  /**\n   * 1: at top\n   * 0: at threshold\n   */\n  const scrollRatio = computed(() => {\n    return clamp(((scrollThreshold.value - currentScroll.value) / scrollThreshold.value) || 0)\n  })\n\n  const onScroll = () => {\n    const targetEl = target.value\n\n    if (!targetEl || (canScroll && !canScroll.value)) return\n\n    previousScroll = currentScroll.value\n    currentScroll.value = ('window' in targetEl) ? targetEl.pageYOffset : targetEl.scrollTop\n\n    const currentScrollHeight = targetEl instanceof Window ? document.documentElement.scrollHeight : targetEl.scrollHeight\n    if (previousScrollHeight !== currentScrollHeight) {\n      previousScrollHeight = currentScrollHeight\n      return\n    }\n\n    isScrollingUp.value = currentScroll.value < previousScroll\n    currentThreshold.value = Math.abs(currentScroll.value - scrollThreshold.value)\n  }\n\n  watch(isScrollingUp, () => {\n    savedScroll.value = savedScroll.value || currentScroll.value\n  })\n\n  watch(isScrollActive, () => {\n    savedScroll.value = 0\n  })\n\n  onMounted(() => {\n    watch(() => props.scrollTarget, scrollTarget => {\n      const newTarget = scrollTarget ? document.querySelector(scrollTarget) : window\n\n      if (!newTarget) {\n        consoleWarn(`Unable to locate element with identifier ${scrollTarget}`)\n        return\n      }\n\n      if (newTarget === target.value) return\n\n      target.value?.removeEventListener('scroll', onScroll)\n      target.value = newTarget\n      target.value.addEventListener('scroll', onScroll, { passive: true })\n    }, { immediate: true })\n  })\n\n  onBeforeUnmount(() => {\n    target.value?.removeEventListener('scroll', onScroll)\n  })\n\n  // Do we need this? If yes - seems that\n  // there's no need to expose onScroll\n  canScroll && watch(canScroll, onScroll, { immediate: true })\n\n  return {\n    scrollThreshold,\n    currentScroll,\n    currentThreshold,\n    isScrollActive,\n    scrollRatio,\n\n    // required only for testing\n    // probably can be removed\n    // later (2 chars chlng)\n    isScrollingUp,\n    savedScroll,\n  }\n}\n", "// Components\nimport { makeVBtnProps, VBtn } from '@/components/VBtn/VBtn'\n\n// Utilities\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VBtnSlots } from '@/components/VBtn/VBtn'\n\nexport const makeVAppBarNavIconProps = propsFactory({\n  ...omit(makeVBtnProps({\n    icon: '$menu',\n    variant: 'text' as const,\n  }), ['spaced']),\n}, 'VAppBarNavIcon')\n\nexport const VAppBarNavIcon = genericComponent<VBtnSlots>()({\n  name: 'VAppBarNavIcon',\n\n  props: makeVAppBarNavIconProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VBtn\n        { ...props }\n        class={[\n          'v-app-bar-nav-icon',\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarNavIcon = InstanceType<typeof VAppBarNavIcon>\n", "// Components\nimport { makeVToolbarTitleProps, VToolbarTitle } from '@/components/VToolbar/VToolbarTitle'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VToolbarTitleSlots } from '@/components/VToolbar/VToolbarTitle'\n\nexport const VAppBarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VAppBarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VToolbarTitle\n        { ...props }\n        class=\"v-app-bar-title\"\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarTitle = InstanceType<typeof VAppBarTitle>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;;;ACAA,OAAA;;;ACMO,IAAMA,yBAAyBC,aAAa;EACjDC,MAAMC;EAEN,GAAGC,mBAAmB;EACtB,GAAGC,aAAa;AAClB,GAAG,eAAe;AAOX,IAAMC,gBAAgBC,iBAAqC,EAAE;EAClEC,MAAM;EAENC,OAAOT,uBAAuB;EAE9BU,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrBE,cAAU,MAAM;AACd,YAAMC,UAAU,CAAC,EAAEF,MAAMG,WAAWH,MAAMV,QAAQO,MAAMP;AAExD,aAAAc,YAAAP,MAAAQ,KAAA;QAAA,SAAAC,eAEW,CACL,mBACAT,MAAMU,KAAK,CACZ;QAAA,SAAAC,eACOX,MAAMY,KAAK;MAAA,GAAA;QAAAN,SAAAA,MAAA,CAEjBD,WAAOQ,gBAAA,OAAA;UAAA,SAAA;QAAA,GAAA,CAEHV,MAAMV,OAAOU,MAAMV,KAAK,IAAIO,MAAMP,MAElCU,MAAMG,UAAU,CAAC,CAAA,CAEtB;MAAA,CAAA;IAGP,CAAC;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;ADtBD,IAAMQ,mBAAmB,CAAC,MAAM,aAAa,WAAW,eAAe,SAAS;AAIzE,IAAMC,oBAAoBC,aAAa;EAC5CC,UAAUC;EACVC,UAAUD;EACVE,OAAOC;EACPC,SAAS;IACPC,MAAMF;IACNG,SAAS;IACTC,WAAYC,OAAWZ,iBAAiBa,SAASD,CAAC;EACpD;EACAE,UAAU;IACRL,MAAML;IACNM,SAAS;EACX;EACAK,iBAAiB;IACfN,MAAM,CAACO,QAAQT,MAAM;IACrBG,SAAS;EACX;EACAO,MAAMb;EACNc,UAAUd;EACVe,QAAQ;IACNV,MAAM,CAACO,QAAQT,MAAM;IACrBG,SAAS;EACX;EACAU,OAAOb;EACPc,OAAOd;EAEP,GAAGe,gBAAgB;EACnB,GAAGC,mBAAmB;EACtB,GAAGC,mBAAmB;EACtB,GAAGC,iBAAiB;EACpB,GAAGC,aAAa;IAAEC,KAAK;EAAS,CAAC;EACjC,GAAGC,eAAe;AACpB,GAAG,UAAU;AAWN,IAAMC,WAAWC,iBAAgC,EAAE;EACxDC,MAAM;EAENC,OAAO/B,kBAAkB;EAEzBgC,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;MAAwBC;IAAsB,IAAIC,mBAAmB,MAAMN,MAAM1B,KAAK;AAC9F,UAAM;MAAEiC;IAAc,IAAIC,UAAUR,KAAK;AACzC,UAAM;MAAES;IAAiB,IAAIC,aAAaV,KAAK;AAC/C,UAAM;MAAEW;IAAe,IAAIC,WAAWZ,KAAK;AAC3C,UAAM;MAAEa;IAAa,IAAIC,aAAad,KAAK;AAC3C,UAAM;MAAEe;IAAW,IAAIC,OAAO;AAE9B,UAAMC,aAAaC,WAAWlB,MAAMlB,aAAa,OAAO,CAAC,CAAEqB,MAAMgB,YAAY,IAAKnB,MAAMlB,QAAQ;AAChG,UAAMsC,gBAAgBC,SAAS,MAAMC,SACnCtC,OAAOgB,MAAMb,MAAM,KAClBa,MAAMxB,YAAY,cAAcQ,OAAOgB,MAAMb,MAAM,IAAI,MACvDa,MAAMxB,YAAY,gBAAgB,IAAI,MACtCwB,MAAMxB,YAAY,YAAY,KAAK,IACnC,EAAE,CAAC;AACN,UAAMO,kBAAkBsC,SAAS,MAAMJ,WAAWM,QAC9CD,SACAtC,OAAOgB,MAAMjB,eAAe,KAC3BiB,MAAMxB,YAAY,cAAcQ,OAAOgB,MAAMjB,eAAe,IAAI,MAChEiB,MAAMxB,YAAY,gBAAgB,IAAI,MACtCwB,MAAMxB,YAAY,YAAY,IAAI,IAClC,EAAE,IACH,CACJ;AAEAgD,oBAAgB;MACdC,MAAM;QACJC,SAAS;MACX;IACF,CAAC;AAEDC,cAAU,MAAM;AACd,YAAMC,WAAW,CAAC,EAAE5B,MAAMX,SAASc,MAAMd;AACzC,YAAMwC,WAAW,CAAC,EAAE1B,MAAMf,SAASY,MAAMZ;AAEzC,YAAM+B,YAAYhB,MAAMgB,YAAY;AACpCF,iBAAWM,QAAQvB,MAAMlB,aAAa,OAAO,CAAC,CAACqC,YAAYnB,MAAMlB;AAEjE,aAAAgD,YAAA9B,MAAAL,KAAA;QAAA,SAAAoC,eAEW,CACL,aACA;UACE,uBAAuB/B,MAAM7B;UAC7B,uBAAuB6B,MAAM3B;UAC7B,mBAAmB2B,MAAMf;UACzB,uBAAuBe,MAAMd;UAC7B,CAAC,sBAAsBc,MAAMxB,OAAO,EAAE,GAAG;QAC3C,GACA4B,uBAAuBmB,OACvBhB,cAAcgB,OACdd,iBAAiBc,OACjBZ,eAAeY,OACfV,aAAaU,OACbR,WAAWQ,OACXvB,MAAMgC,KAAK,CACZ;QAAA,SAAAC,eACM,CACL5B,sBAAsBkB,OACtBvB,MAAMkC,KAAK,CACZ;MAAA,GAAA;QAAAxD,SAAAA,MAAA,CAECmD,YAAQM,gBAAA,OAAA;UAAA,OAAA;UAAA,SAAA;QAAA,GAAA,CAEJ,CAAChC,MAAMf,QAAK0C,YAAAM,MAAA;UAAA,OAAA;UAAA,SAAA;UAAA,OAIJpC,MAAMZ;QAAK,GAAA,IAAA,IAAA0C,YAAAO,mBAAA;UAAA,OAAA;UAAA,YAKN,CAACrC,MAAMZ;UAAK,YACb;YACRgD,MAAM;cACJE,OAAO;cACPC,KAAKvC,MAAMZ;YACb;UACF;QAAC,GACiBe,MAAMf,KAAK,CAEhC,CAAA,GAEJ0C,YAAAO,mBAAA;UAAA,YAGW;YACRG,OAAO;cACLrD,QAAQsD,cAAcrB,cAAcG,KAAK;YAC3C;UACF;QAAC,GAAA;UAAA7C,SAAAA,MAAA,CAAAyD,gBAAA,OAAA;YAAA,SAAA;YAAA,SAIQ;cAAEhD,QAAQsD,cAAcrB,cAAcG,KAAK;YAAE;UAAC,GAAA,CAEnDpB,MAAMuC,WAAOP,gBAAA,OAAA;YAAA,SAAA;UAAA,GAAA,CAEThC,MAAMuC,UAAU,CAAC,CAAA,GAIrBd,YAAQE,YAAAa,eAAA;YAAA,OAAA;YAAA,QAC0B3C,MAAMX;UAAK,GAAA;YACxCuD,MAAMzC,MAAMd;UAAK,CAAA,GAItBc,MAAMzB,UAAU,GAEhByB,MAAM0C,UAAMV,gBAAA,OAAA;YAAA,SAAA;UAAA,GAAA,CAERhC,MAAM0C,SAAS,CAAC,CAAA,CAErB,CAAA,CAAA;QAAA,CAAA,GAAAf,YAAAO,mBAAA;UAAA,YAKO;YACRG,OAAO;cACLrD,QAAQsD,cAAc1D,gBAAgBwC,KAAK;YAC7C;UACF;QAAC,GAAA;UAAA7C,SAAAA,MAAA,CAAAoD,YAAAgB,mBAAA,MAAA;YAAApE,SAAAA,MAAA,CAGGuC,WAAWM,SAAKY,gBAAA,OAAA;cAAA,SAAA;cAAA,SAGP;gBAAEhD,QAAQsD,cAAc1D,gBAAgBwC,KAAK;cAAE;YAAC,GAAA,CAErDJ,SAAS,CAAA,CAEd;UAAA,CAAA,CAAA;QAAA,CAAA,CAAA;MAAA,CAAA;IAKX,CAAC;AAED,WAAO;MACLC;MACArC;IACF;EACF;AACF,CAAC;;;AEvMM,IAAMgE,kBAAkBC,aAAa;EAC1CC,cAAc;IACZC,MAAMC;EACR;EACAC,iBAAiB;IACfF,MAAM,CAACC,QAAQE,MAAM;IACrBC,SAAS;EACX;AACF,GAAG,QAAQ;AAMJ,SAASC,UACdC,OAEA;AAAA,MADAC,OAAqBC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG,CAAC;AAEzB,QAAM;IAAEG;EAAU,IAAIJ;AACtB,MAAIK,iBAAiB;AACrB,MAAIC,uBAAuB;AAC3B,QAAMC,SAASC,IAA6B,IAAI;AAChD,QAAMC,gBAAgBC,WAAW,CAAC;AAClC,QAAMC,cAAcD,WAAW,CAAC;AAChC,QAAME,mBAAmBF,WAAW,CAAC;AACrC,QAAMG,iBAAiBH,WAAW,KAAK;AACvC,QAAMI,gBAAgBJ,WAAW,KAAK;AAEtC,QAAMf,kBAAkBoB,SAAS,MAAM;AACrC,WAAOnB,OAAOG,MAAMJ,eAAe;EACrC,CAAC;AAMD,QAAMqB,cAAcD,SAAS,MAAM;AACjC,WAAOE,OAAQtB,gBAAgBuB,QAAQT,cAAcS,SAASvB,gBAAgBuB,SAAU,CAAC;EAC3F,CAAC;AAED,QAAMC,WAAWA,MAAM;AACrB,UAAMC,WAAWb,OAAOW;AAExB,QAAI,CAACE,YAAahB,aAAa,CAACA,UAAUc,MAAQ;AAElDb,qBAAiBI,cAAcS;AAC/BT,kBAAcS,QAAS,YAAYE,WAAYA,SAASC,cAAcD,SAASE;AAE/E,UAAMC,sBAAsBH,oBAAoBI,SAASC,SAASC,gBAAgBC,eAAeP,SAASO;AAC1G,QAAIrB,yBAAyBiB,qBAAqB;AAChDjB,6BAAuBiB;AACvB;IACF;AAEAT,kBAAcI,QAAQT,cAAcS,QAAQb;AAC5CO,qBAAiBM,QAAQU,KAAKC,IAAIpB,cAAcS,QAAQvB,gBAAgBuB,KAAK;EAC/E;AAEAY,QAAMhB,eAAe,MAAM;AACzBH,gBAAYO,QAAQP,YAAYO,SAAST,cAAcS;EACzD,CAAC;AAEDY,QAAMjB,gBAAgB,MAAM;AAC1BF,gBAAYO,QAAQ;EACtB,CAAC;AAEDa,YAAU,MAAM;AACdD,UAAM,MAAM/B,MAAMP,cAAcA,kBAAgB;AAC9C,YAAMwC,YAAYxC,eAAeiC,SAASQ,cAAczC,YAAY,IAAI0C;AAExE,UAAI,CAACF,WAAW;AACdG,oBAAY,4CAA4C3C,YAAY,EAAE;AACtE;MACF;AAEA,UAAIwC,cAAczB,OAAOW,MAAO;AAEhCX,aAAOW,OAAOkB,oBAAoB,UAAUjB,QAAQ;AACpDZ,aAAOW,QAAQc;AACfzB,aAAOW,MAAMmB,iBAAiB,UAAUlB,UAAU;QAAEmB,SAAS;MAAK,CAAC;IACrE,GAAG;MAAEC,WAAW;IAAK,CAAC;EACxB,CAAC;AAEDC,kBAAgB,MAAM;AACpBjC,WAAOW,OAAOkB,oBAAoB,UAAUjB,QAAQ;EACtD,CAAC;AAIDf,eAAa0B,MAAM1B,WAAWe,UAAU;IAAEoB,WAAW;EAAK,CAAC;AAE3D,SAAO;IACL5C;IACAc;IACAG;IACAC;IACAG;;;;IAKAF;IACAH;EACF;AACF;;;AH7GO,IAAM8B,mBAAmBC,aAAa;EAC3CC,gBAAgBC;EAChBC,YAAY;IACVC,MAAMC;IACNC,SAAS;EACX;EACAC,UAAU;IACRH,MAAMF;IACNI,SAAS;IACTE,WAAYC,WAAe,CAAC,OAAO,QAAQ,EAAEC,SAASD,KAAK;EAC7D;EAEA,GAAGE,kBAAkB;EACrB,GAAGC,oBAAoB;EACvB,GAAGC,gBAAgB;EAEnBC,QAAQ;IACNV,MAAM,CAACW,QAAQb,MAAM;IACrBI,SAAS;EACX;AACF,GAAG,SAAS;AAEL,IAAMU,UAAUC,iBAAgC,EAAE;EACvDC,MAAM;EAENC,OAAOpB,iBAAiB;EAExBqB,OAAO;IACL,qBAAsBX,WAAmB;EAC3C;EAEAY,MAAOF,OAAKG,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAME,cAAcC,IAAc;AAClC,UAAMC,WAAWC,gBAAgBR,OAAO,YAAY;AACpD,UAAMlB,iBAAiB2B,SAAS,MAAM;AACpC,YAAMC,WAAW,IAAIC,IAAIX,MAAMlB,gBAAgB8B,MAAM,GAAG,KAAK,CAAA,CAAE;AAC/D,aAAO;QACLC,MAAMH,SAASI,IAAI,MAAM;QACzBC,WAAWL,SAASI,IAAI,YAAY;QACpCE,UAAUN,SAASI,IAAI,UAAU;QACjCG,UAAUP,SAASI,IAAI,UAAU;QACjCI,SAASR,SAASI,IAAI,SAAS;QAC/BK,WAAWT,SAASI,IAAI,YAAY;;MAEtC;IACF,CAAC;AACD,UAAMM,YAAYX,SAAS,MAAM;AAC/B,YAAMC,WAAW5B,eAAeQ;AAChC,aACEoB,SAASG,QACTH,SAASK,aACTL,SAASM,YACTN,SAASO,YACTP,SAASQ,WACTR,SAASS;MAET,CAACZ,SAASjB;IAEd,CAAC;AACD,UAAM;MACJ+B;MACAC;MACAC;MACAC;IACF,IAAIC,UAAUzB,OAAO;MAAEoB;IAAU,CAAC;AAElC,UAAMM,UAAUC,MAAM,MACpB7C,eAAeQ,MAAMuB,QACrB/B,eAAeQ,MAAMyB,SACtB;AACD,UAAMa,cAAcnB,SAAS,MAAMT,MAAMiB,YACvCnC,eAAeQ,MAAM2B,aACpBnC,eAAeQ,MAAM0B,WAAWQ,YAAYlC,QAAQ,IAAIkC,YAAYlC,UAAU,EAChF;AACD,UAAMuC,SAASpB,SAAS,MAAMT,MAAM8B,QAClChD,eAAeQ,MAAMyB,aACrB,CAACR,SAASjB,SAEVR,eAAeQ,MAAM4B,YACpBpC,eAAeQ,MAAM0B,WAAWK,cAAc/B,QAAQ,IAAI+B,cAAc/B,UAAU,EACpF;AACD,UAAMyC,UAAUtB,SAAS,MACvB3B,eAAeQ,MAAM6B,YAChBrC,eAAeQ,MAAM0B,WAAW,IAAIQ,YAAYlC,QAAQkC,YAAYlC,QACrE0C,MACL;AACD,UAAMrC,SAASc,SAAS,MAAM;AAC5B,UAAI3B,eAAeQ,MAAMuB,QAAQ/B,eAAeQ,MAAM0B,SAAU,QAAO;AAEvE,YAAMrB,UAASU,YAAYf,OAAO2C,iBAAiB;AACnD,YAAMC,kBAAkB7B,YAAYf,OAAO4C,mBAAmB;AAE9D,UAAI,CAACR,QAAQpC,MAAO,QAAQK,UAASuC;AAErC,aAAOb,cAAc/B,QAAQgC,gBAAgBhC,SAASR,eAAeQ,MAAMyB,YACtEpB,UAASuC,kBACVvC;IACN,CAAC;AAEDwC,mBAAe,MAAM,CAAC,CAACnC,MAAMlB,gBAAgB,MAAM;AACjDsD,kBAAY,MAAM;AAChB,YAAIV,QAAQpC,OAAO;AACjB,cAAIR,eAAeQ,MAAM0B,UAAU;AACjCT,qBAASjB,QAAQ+B,cAAc/B,QAAQgC,gBAAgBhC;UACzD,OAAO;AACLiB,qBAASjB,QAAQiC,cAAcjC,SAAU+B,cAAc/B,QAAQgC,gBAAgBhC;UACjF;QACF,OAAO;AACLiB,mBAASjB,QAAQ;QACnB;MACF,CAAC;IACH,CAAC;AAED,UAAM;MAAE+C;IAAc,IAAIC,WAAW;AACrC,UAAM;MAAEC;IAAiB,IAAIC,cAAc;MACzCC,IAAIzC,MAAMD;MACV2C,OAAOjC,SAAS,MAAMkC,SAAS3C,MAAM0C,OAAO,EAAE,CAAC;MAC/CE,UAAUjB,MAAM,MAAM3B,MAAMZ,QAAQ;MACpCyD,YAAYlD;MACZmD,aAAaC,WAAWf,MAAS;MACjCgB,QAAQzC;MACR0C,UAAUtB,MAAM,MAAM3B,MAAMiD,QAAQ;IACtC,CAAC;AAEDC,cAAU,MAAM;AACd,YAAMC,eAAeC,SAASC,YAAYrD,KAAK;AAE/C,aAAAsD,YAAAF,UAAAG,WAAA;QAAA,OAEUlD;QAAW,SACV,CACL,aACA;UACE,qBAAqBL,MAAMZ,aAAa;QAC1C,GACAY,MAAMwD,KAAK;QACZ,SACM,CACL;UACE,GAAGjB,iBAAiBjD;UACpB,6BAA6ByC,QAAQzC;UACrCK,QAAQqC;UACR,GAAGK,cAAc/C;QACnB,GACAU,MAAMyD,KAAK;MACZ,GACIN,cAAY;QAAA,YACNvB,YAAYtC;QAAK,QACrBuC,OAAOvC;MAAK,CAAA,GACTc,KAAK;IAGrB,CAAC;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;AIxKM,IAAMsD,0BAA0BC,aAAa;EAClD,GAAGC,KAAKC,cAAc;IACpBC,MAAM;IACNC,SAAS;EACX,CAAC,GAAG,CAAC,QAAQ,CAAC;AAChB,GAAG,gBAAgB;AAEZ,IAAMC,iBAAiBC,iBAA4B,EAAE;EAC1DC,MAAM;EAENC,OAAOT,wBAAwB;EAE/BU,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrBE,cAAU,MAAAC,YAAAC,MAAAC,WAEDP,OAAK;MAAA,SACH,CACL,oBAAoB;IACrB,CAAA,GACSG,KAAK,CAElB;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;ACzBM,IAAMK,eAAeC,iBAAqC,EAAE;EACjEC,MAAM;EAENC,OAAOC,uBAAuB;EAE9BC,MAAOF,OAAKG,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrBE,cAAU,MAAAC,YAAAC,eAAAC,WAEDR,OAAK;MAAA,SAAA;IAAA,CAAA,GAEAI,KAAK,CAElB;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["makeVToolbarTitleProps", "propsFactory", "text", "String", "makeComponentProps", "makeTagProps", "VToolbarTitle", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "hasText", "default", "_createVNode", "tag", "_normalizeClass", "class", "_normalizeStyle", "style", "_createElementVNode", "allowedDensities", "makeVToolbarProps", "propsFactory", "absolute", "Boolean", "collapse", "color", "String", "density", "type", "default", "validator", "v", "includes", "extended", "extensionHeight", "Number", "flat", "floating", "height", "image", "title", "makeBorderProps", "makeComponentProps", "makeElevationProps", "makeRoundedProps", "makeTagProps", "tag", "makeThemeProps", "VToolbar", "genericComponent", "name", "props", "setup", "_ref", "slots", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "borderClasses", "useBorder", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "themeClasses", "provideTheme", "rtlClasses", "useRtl", "isExtended", "shallowRef", "extension", "contentHeight", "computed", "parseInt", "value", "provideDefaults", "VBtn", "variant", "useRender", "hasTitle", "hasImage", "_createVNode", "_normalizeClass", "class", "_normalizeStyle", "style", "_createElementVNode", "VImg", "VDefaultsProvider", "cover", "src", "VTabs", "convertToUnit", "prepend", "VToolbarTitle", "text", "append", "VExpandTransition", "makeScrollProps", "propsFactory", "scrollTarget", "type", "String", "scrollThreshold", "Number", "default", "useScroll", "props", "args", "arguments", "length", "undefined", "canScroll", "previousScroll", "previousScrollHeight", "target", "ref", "currentScroll", "shallowRef", "savedScroll", "currentThreshold", "isScrollActive", "isScrollingUp", "computed", "scrollRatio", "clamp", "value", "onScroll", "targetEl", "pageYOffset", "scrollTop", "currentScrollHeight", "Window", "document", "documentElement", "scrollHeight", "Math", "abs", "watch", "onMounted", "newTarget", "querySelector", "window", "consoleWarn", "removeEventListener", "addEventListener", "passive", "immediate", "onBeforeUnmount", "makeVAppBarProps", "propsFactory", "scrollBehavior", "String", "modelValue", "type", "Boolean", "default", "location", "validator", "value", "includes", "makeVToolbarProps", "makeLayoutItemProps", "makeScrollProps", "height", "Number", "VAppBar", "genericComponent", "name", "props", "emits", "setup", "_ref", "slots", "vToolbarRef", "ref", "isActive", "useProxiedModel", "computed", "behavior", "Set", "split", "hide", "has", "fullyHide", "inverted", "collapse", "elevate", "fadeImage", "canScroll", "currentScroll", "scrollThreshold", "isScrollingUp", "scrollRatio", "useScroll", "canHide", "toRef", "isCollapsed", "isFlat", "flat", "opacity", "undefined", "contentHeight", "extensionHeight", "useToggleScope", "watchEffect", "ssrBootStyles", "useSsrBoot", "layoutItemStyles", "useLayoutItem", "id", "order", "parseInt", "position", "layoutSize", "elementSize", "shallowRef", "active", "absolute", "useRender", "toolbarProps", "VToolbar", "filterProps", "_createVNode", "_mergeProps", "class", "style", "makeVAppBarNavIconProps", "propsFactory", "omit", "makeVBtnProps", "icon", "variant", "VAppBarNavIcon", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "VBtn", "_mergeProps", "VAppBarTitle", "genericComponent", "name", "props", "makeVToolbarTitleProps", "setup", "_ref", "slots", "useRender", "_createVNode", "VToolbarTitle", "_mergeProps"]
}
