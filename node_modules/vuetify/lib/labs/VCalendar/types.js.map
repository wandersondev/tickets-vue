{"version":3,"file":"types.js","names":[],"sources":["../../../src/labs/VCalendar/types.ts"],"sourcesContent":["// Types\nimport type { VNode } from 'vue'\n\nexport type CalendarCategory =\n  | string\n  | {\n    [key: string]: any\n    name?: string\n    categoryName?: string\n  }\n\nexport type CalendarCategoryTextFunction = (\n  category: CalendarCategory\n) => string\n\nexport interface CalendarTimestamp {\n  date: string\n  time: string\n  year: number\n  month: number\n  day: number\n  weekday: number\n  hour: number\n  minute: number\n  hasDay: boolean\n  hasTime: boolean\n  past: boolean\n  present: boolean\n  future: boolean\n  category?: CalendarCategory\n}\n\nexport type CalendarFormatter = (timestamp: CalendarTimestamp, short: boolean) => string\n\nexport interface CalendarEvent {\n  [prop: string]: any\n}\n\nexport interface CalendarEventParsed {\n  input: CalendarEvent\n  start: CalendarTimestamp\n  startIdentifier: number\n  startTimestampIdentifier: number\n  end: CalendarTimestamp\n  endIdentifier: number\n  endTimestampIdentifier: number\n  allDay: boolean\n  index: number\n  category: string | false\n}\n\nexport interface CalendarEventVisual {\n  event: CalendarEventParsed\n  columnCount: number\n  column: number\n  left: number\n  width: number\n}\n\nexport interface CalendarDaySlotScope extends CalendarTimestamp {\n  outside: boolean\n  index: number\n  week: CalendarTimestamp[]\n  category: CalendarCategory\n}\n\nexport type CalendarTimeToY = (time: CalendarTimestamp | number | string, clamp?: boolean) => number\n\nexport type CalendarTimeDelta = (time: CalendarTimestamp | number | string) => number | false\n\nexport interface CalendarDayBodySlotScope extends CalendarDaySlotScope {\n  timeToY: CalendarTimeToY\n  timeDelta: CalendarTimeDelta\n}\n\nexport type CalendarEventOverlapMode = (\n  events: CalendarEventParsed[],\n  firstWeekday: number,\n  overlapThreshold: number\n) => (\n  day: CalendarDaySlotScope,\n  dayEvents: CalendarEventParsed[],\n  timed: boolean,\n  reset: boolean\n) => CalendarEventVisual[]\n\nexport type CalendarEventColorFunction = (event: CalendarEvent) => string | undefined\n\nexport type CalendarEventTimedFunction = (event: CalendarEvent) => boolean\n\nexport type CalendarEventCategoryFunction = (event: CalendarEvent) => string\n\nexport type CalendarEventNameFunction = (event: CalendarEventParsed, timedEvent: boolean) => string | VNode\n"],"mappings":"","ignoreList":[]}