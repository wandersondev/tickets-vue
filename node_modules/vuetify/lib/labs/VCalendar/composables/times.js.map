{"version":3,"file":"times.js","names":["computed","reactive","watch","parseDate","parseTimestamp","validateTimestamp","useTimes","props","times","now","today","parsedNow","setPresent","present","past","future","getNow","Date","updateDay","target","date","year","month","day","weekday","updateTime","time","hour","minute","updateTimes","value"],"sources":["../../../../src/labs/VCalendar/composables/times.ts"],"sourcesContent":["// Utilities\nimport { computed, reactive, watch } from 'vue'\nimport {\n  parseDate,\n  parseTimestamp,\n  validateTimestamp,\n} from '../util/timestamp'\n\n// Types\nimport type { CalendarTimestamp } from '../types'\n\nexport function useTimes (props: { now: string | undefined }) {\n  const times = reactive({\n    now: parseTimestamp('0000-00-00 00:00', true),\n    today: parseTimestamp('0000-00-00', true),\n  })\n\n  const parsedNow = computed((): CalendarTimestamp | null => {\n    return props.now && validateTimestamp(props.now) ? parseTimestamp(props.now, true) : null\n  })\n\n  function setPresent (): void {\n    times.now.present = times.today.present = true\n    times.now.past = times.today.past = false\n    times.now.future = times.today.future = false\n  }\n\n  function getNow (): CalendarTimestamp {\n    return parseDate(new Date())\n  }\n\n  function updateDay (now: CalendarTimestamp, target: CalendarTimestamp): void {\n    if (now.date !== target.date) {\n      target.year = now.year\n      target.month = now.month\n      target.day = now.day\n      target.weekday = now.weekday\n      target.date = now.date\n    }\n  }\n\n  function updateTime (now: CalendarTimestamp, target: CalendarTimestamp): void {\n    if (now.time !== target.time) {\n      target.hour = now.hour\n      target.minute = now.minute\n      target.time = now.time\n    }\n  }\n\n  function updateTimes (): void {\n    const now: CalendarTimestamp = parsedNow.value || getNow()\n    updateDay(now, times.now)\n    updateTime(now, times.now)\n    updateDay(now, times.today)\n  }\n\n  watch(parsedNow, updateTimes)\n\n  updateTimes()\n  setPresent()\n\n  return {\n    times,\n    parsedNow,\n    updateTimes,\n    setPresent,\n    getNow,\n    updateDay,\n    updateTime,\n  }\n}\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAAA,SAE7CC,SAAS,EACTC,cAAc,EACdC,iBAAiB,gCAGnB;AAGA,OAAO,SAASC,QAAQA,CAAEC,KAAkC,EAAE;EAC5D,MAAMC,KAAK,GAAGP,QAAQ,CAAC;IACrBQ,GAAG,EAAEL,cAAc,CAAC,kBAAkB,EAAE,IAAI,CAAC;IAC7CM,KAAK,EAAEN,cAAc,CAAC,YAAY,EAAE,IAAI;EAC1C,CAAC,CAAC;EAEF,MAAMO,SAAS,GAAGX,QAAQ,CAAC,MAAgC;IACzD,OAAOO,KAAK,CAACE,GAAG,IAAIJ,iBAAiB,CAACE,KAAK,CAACE,GAAG,CAAC,GAAGL,cAAc,CAACG,KAAK,CAACE,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI;EAC3F,CAAC,CAAC;EAEF,SAASG,UAAUA,CAAA,EAAU;IAC3BJ,KAAK,CAACC,GAAG,CAACI,OAAO,GAAGL,KAAK,CAACE,KAAK,CAACG,OAAO,GAAG,IAAI;IAC9CL,KAAK,CAACC,GAAG,CAACK,IAAI,GAAGN,KAAK,CAACE,KAAK,CAACI,IAAI,GAAG,KAAK;IACzCN,KAAK,CAACC,GAAG,CAACM,MAAM,GAAGP,KAAK,CAACE,KAAK,CAACK,MAAM,GAAG,KAAK;EAC/C;EAEA,SAASC,MAAMA,CAAA,EAAuB;IACpC,OAAOb,SAAS,CAAC,IAAIc,IAAI,CAAC,CAAC,CAAC;EAC9B;EAEA,SAASC,SAASA,CAAET,GAAsB,EAAEU,MAAyB,EAAQ;IAC3E,IAAIV,GAAG,CAACW,IAAI,KAAKD,MAAM,CAACC,IAAI,EAAE;MAC5BD,MAAM,CAACE,IAAI,GAAGZ,GAAG,CAACY,IAAI;MACtBF,MAAM,CAACG,KAAK,GAAGb,GAAG,CAACa,KAAK;MACxBH,MAAM,CAACI,GAAG,GAAGd,GAAG,CAACc,GAAG;MACpBJ,MAAM,CAACK,OAAO,GAAGf,GAAG,CAACe,OAAO;MAC5BL,MAAM,CAACC,IAAI,GAAGX,GAAG,CAACW,IAAI;IACxB;EACF;EAEA,SAASK,UAAUA,CAAEhB,GAAsB,EAAEU,MAAyB,EAAQ;IAC5E,IAAIV,GAAG,CAACiB,IAAI,KAAKP,MAAM,CAACO,IAAI,EAAE;MAC5BP,MAAM,CAACQ,IAAI,GAAGlB,GAAG,CAACkB,IAAI;MACtBR,MAAM,CAACS,MAAM,GAAGnB,GAAG,CAACmB,MAAM;MAC1BT,MAAM,CAACO,IAAI,GAAGjB,GAAG,CAACiB,IAAI;IACxB;EACF;EAEA,SAASG,WAAWA,CAAA,EAAU;IAC5B,MAAMpB,GAAsB,GAAGE,SAAS,CAACmB,KAAK,IAAId,MAAM,CAAC,CAAC;IAC1DE,SAAS,CAACT,GAAG,EAAED,KAAK,CAACC,GAAG,CAAC;IACzBgB,UAAU,CAAChB,GAAG,EAAED,KAAK,CAACC,GAAG,CAAC;IAC1BS,SAAS,CAACT,GAAG,EAAED,KAAK,CAACE,KAAK,CAAC;EAC7B;EAEAR,KAAK,CAACS,SAAS,EAAEkB,WAAW,CAAC;EAE7BA,WAAW,CAAC,CAAC;EACbjB,UAAU,CAAC,CAAC;EAEZ,OAAO;IACLJ,KAAK;IACLG,SAAS;IACTkB,WAAW;IACXjB,UAAU;IACVI,MAAM;IACNE,SAAS;IACTO;EACF,CAAC;AACH","ignoreList":[]}